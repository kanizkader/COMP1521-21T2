# Read numbers into an array until a negative number is entered
# then print the numbers in reverse order

# i in register $t0
# registers $t1, $t2 & $t3 used to hold temporary results

main:
    li   $t0, 0          # i = 0
loop0:
    bge  $t0, 1000, while_2 # while (i < 1000) {

    li   $v0, 5          #   scanf("%d", &x);
    syscall              #
    move    $t4, $v0

if:
    bltz    $t4, while_2   
else:
    mul  $t1, $t0, 4     #   calculate &numbers[i]
    la   $t2, numbers    #
    add  $t3, $t1, $t2   #
    sw   $t4, ($t3)      #   store entered number in array
end_0:
    addi $t0, $t0, 1     #   i++;
    j    loop0           # }

while_2:
    blez    $t0, end1
    sub     $t0, $t0, 1
    
    move    $a0, $t3
    li      $v0, 1
    j       while_2
end1:
    li   $v0, 0          # return 0
    jr   $ra              #

.data
numbers:
    .space 4000
    
